<!DOCTYPE html>
<HTML APPLICATIONNAME="D:\Documents\programmation\jcalc\jcalcV0\jcalc_diff.hta" xmlns="http://www.w3.org/1999/xhtml" sizcache="1" sizset="0" xmlns:svg = "http://www.w3.org/2000/svg" XMLNS:HTA><HEAD><HTA:APPLICATION APPLICATIONNAME="JCalc vide" SCROLL="yes" SINGLEINSTANCE="yes"></HTA:APPLICATION><LINK rel=stylesheet type=text/css href="jcalc.css" src="jcalc.css">
<SCRIPT src="jquery-1.5.1.min.js"></SCRIPT>

<SCRIPT class=UPDATE src="jcalcEdi.js"></SCRIPT>

<SCRIPT src="units.js"></SCRIPT>

<SCRIPT src="jcalc.js"></SCRIPT>

<SCRIPT src="axe.js"></SCRIPT>

<SCRIPT src="stateMachine.js"></SCRIPT>

<SCRIPT src="BOM.js"></SCRIPT>

<SCRIPT src="sys.js"></SCRIPT>

<SCRIPT src="ocrRdy.js"></SCRIPT>

<SCRIPT src="finance.js"></SCRIPT>

<SCRIPT src="diff.js"></SCRIPT>
</HEAD>
<BODY sizcache="1" sizset="0"  designMode="on">
<DIV id=menu class=TOOLBAR style="MAX-WIDTH: 50%; FLOAT: right">
<DIV><BUTTON onclick=jc.execUntilSelected(); id=runUntilSelectedBtn style="HEIGHT: 23px; WIDTH: 43px; COLOR: #8dff60">&#9658;|</BUTTON><BUTTON onclick=jc.execAll(); id=runAllBtn style="HEIGHT: 23px; WIDTH: 43px; COLOR: #8dff60">&#9658;&#9658;</BUTTON><BUTTON onclick=jc.clearTimers(); id=stopAnimation style="HEIGHT: 23px; WIDTH: 43px; COLOR: red">&#9632;</BUTTON><BUTTON onclick=jc.clearOutputs(); id=clearOutputsBtn style="HEIGHT: 23px; WIDTH: 43px">clear</BUTTON><BUTTON onclick=jc.save(); id=saveBtn class=WARNING style="HEIGHT: 23px; WIDTH: 43px" >save</BUTTON><BUTTON onclick=jc.print(); style="HEIGHT: 23px; WIDTH: 43px">print</BUTTON><BUTTON onclick=jc.helpPanel$.toggle(100); style="HEIGHT: 23px; WIDTH: 43px">help</BUTTON><INPUT onclick=jc.showCode(event) type=checkbox>codes</INPUT><INPUT onclick=jc.showCut(event) type=checkbox>cuts</INPUT><INPUT onclick=jc.showTest(event) type=checkbox>tests</INPUT><INPUT onclick=jc.showTrace(event) type=checkbox>traces</INPUT><INPUT onclick=jc.setAutoRun(event) CHECKED type=checkbox>auto run</INPUT></DIV>
<DIV style="OVERFLOW: hidden; POSITION: ; ZOOM: 1; FILTER:  ; DISPLAY: none" ><SPAN id=codeId>no selection</SPAN><BUTTON onclick=jc.cutBlock(jc.selectedElement); id=cutBtn style="HEIGHT: 23px; WIDTH: 43px">cut</BUTTON><BUTTON onclick="jc.templates[jc.templateChoice$.val()].insertBefore(jc.selectedElement,jc.currentContainer$.attr('container'))" style="HEIGHT: 23px; WIDTH: 43px">&#8593;</BUTTON><BUTTON onclick="jc.templates[jc.templateChoice$.val()].convert(jc.selectedElement,jc.currentContainer$.attr('container'))" style="HEIGHT: 23px; WIDTH: 43px">&#8596;</BUTTON><SELECT><OPTION selected value=code>code</OPTION><OPTION value=richText>richText</OPTION><OPTION value=section>section</OPTION><OPTION value=paste>paste</OPTION></SELECT><BUTTON onclick="jc.templates[jc.templateChoice$.val()].insertAfter(jc.selectedElement,jc.currentContainer$.attr('container'))" style="HEIGHT: 23px; WIDTH: 43px">&#8595;</BUTTON><BUTTON onclick=jc.showOutputHtml(this); id=showHtmlBtn style="HEIGHT: 23px; WIDTH: 43px">&#8594;html</BUTTON><BUTTON onclick=jc.copyOutputToTest(this); id=toTestBtn style="HEIGHT: 23px; WIDTH: 43px">&#8594;test</BUTTON>
<DIV id=objectToolBar></DIV></DIV>
<DIV><SPAN onclick=jc.helpPanel$.hide(300) style="CURSOR: pointer; COLOR: red">&nbsp;×&nbsp;</SPAN><INPUT ><SPAN onclick=jc.help.index.back() style="CURSOR: pointer; COLOR: #8dff60">&#9668;</SPAN>
<DIV style="OVERFLOW: auto; MAX-HEIGHT: 400px">please type your search above</DIV></DIV></DIV>
<DIV id=jcContent sizcache="1" sizset="0" container="items"><PRE id=code0002 class="CODE ELEMENT EDITABLE" contentEditable=false><P>jc.diffFiles('D:\\Documents\\programmation\\goldOptimizer\\gold\\gold.js','D:\\Documents\\programmation\\goldOptimizer\\gold\\gold_7.js');</P><P></P></PRE>
<DIV id=out0002 class="OUTPUT SUCCESS"><PRE class="DIFF EQUAL">=0000,0000 //&nbsp;Gold&nbsp;Optimizer<BR></PRE><PRE class="DIFF DEL">-0001,     //&nbsp;copyright&nbsp;Marc&nbsp;Nicole&nbsp;2018/2019<BR></PRE><PRE class="DIFF ADD">+    ,0001 //&nbsp;copyright&nbsp;Marc&nbsp;Nicole&nbsp;2018<BR></PRE><PRE class="DIFF EQUAL">=0002,0002 /////////////////////////////////////////////////////////////////////////////////////<BR>=0003,0003 <BR>=0004,0004 <BR>=0005,0005 gold&nbsp;=&nbsp;{};<BR>=0006,0006 <BR></PRE><PRE class="DIFF DEL">-0007,     a('coucou')<BR>-0008,     <BR></PRE><PRE class="DIFF ADD"></PRE><PRE class="DIFF EQUAL">=0009,0007 ////&nbsp;Moves&nbsp;//////////////////////////////////////////////////////////////////////////////////////<BR>=0010,0008 <BR></PRE><PRE class="DIFF DEL">-0011,     gold.Moves&nbsp;=&nbsp;function&nbsp;gold.Moves(forbiddenZones)&nbsp;{<BR></PRE><PRE class="DIFF ADD">+    ,0009 gold.Moves&nbsp;=&nbsp;function&nbsp;Moves(forbiddenZones)&nbsp;{<BR></PRE><PRE class="DIFF EQUAL">=0012,0010 &nbsp;&nbsp;//&nbsp;Moves&nbsp;object&nbsp;represent&nbsp;the&nbsp;possible&nbsp;moves&nbsp;by&nbsp;describing&nbsp;all&nbsp;forbiddenZones&nbsp;of&nbsp;move<BR>=0013,0011 &nbsp;&nbsp;//&nbsp;-&nbsp;forbiddenZones&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;{from:...,to:...}&nbsp;<BR></PRE><PRE class="DIFF DEL">-0014,     &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meaning&nbsp;that&nbsp;a&nbsp;move&nbsp;between&nbsp;from&nbsp;and&nbsp;to&nbsp;(not&nbsp;included)&nbsp;is&nbsp;forbidden<BR>-0015,     &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this&nbsp;list&nbsp;has&nbsp;to&nbsp;be&nbsp;in&nbsp;its&nbsp;simpliest&nbsp;form.&nbsp;if&nbsp;you&nbsp;can't&nbsp;garantie&nbsp;that,&nbsp;use&nbsp;forbid&nbsp;method<BR></PRE><PRE class="DIFF ADD">+    ,0012 &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meaning&nbsp;that&nbsp;a&nbsp;move&nbsp;between&nbsp;from&nbsp;(included)&nbsp;and&nbsp;to&nbsp;(not&nbsp;included)&nbsp;is&nbsp;forbidden<BR></PRE><PRE class="DIFF EQUAL">=0016,0013 &nbsp;&nbsp;this.forbiddenZones&nbsp;=&nbsp;forbiddenZones&nbsp;||&nbsp;[];&nbsp;<BR>=0017,0014 }<BR>=0018,0015 <BR>=0019,0016 gold.Moves.prototype.clear&nbsp;=&nbsp;function(){<BR>=0020,0017 &nbsp;&nbsp;//&nbsp;remove&nbsp;all&nbsp;forbidden&nbsp;zones<BR>=0021,0018 &nbsp;&nbsp;this.forbiddenZones&nbsp;=&nbsp;[];<BR>=0022,0019 &nbsp;&nbsp;return&nbsp;this;<BR>=0023,0020 }<BR>=0024,0021 &nbsp;&nbsp;<BR>=0025,0022 gold.Moves.prototype.first&nbsp;=&nbsp;function(){<BR>=0026,0023 &nbsp;&nbsp;//&nbsp;gets&nbsp;the&nbsp;first&nbsp;possible&nbsp;move<BR>=0027,0024 &nbsp;&nbsp;//&nbsp;resets&nbsp;the&nbsp;currentIndex&nbsp;so&nbsp;that&nbsp;next()&nbsp;can&nbsp;be&nbsp;used&nbsp;as&nbsp;an&nbsp;iterator<BR>=0028,0025 &nbsp;&nbsp;if&nbsp;(this.forbiddenZones.length&nbsp;===&nbsp;0)&nbsp;return&nbsp;undefined;<BR>=0029,0026 &nbsp;&nbsp;this.currentIndex&nbsp;=&nbsp;0;<BR>=0030,0027 &nbsp;&nbsp;return&nbsp;this.next();<BR>=0031,0028 }<BR>=0032,0029 <BR>=0033,0030 gold.Moves.prototype.next&nbsp;=&nbsp;function()&nbsp;{<BR>=0034,0031 &nbsp;&nbsp;//&nbsp;return&nbsp;the&nbsp;next&nbsp;significant&nbsp;possible&nbsp;move<BR>=0035,0032 &nbsp;&nbsp;return&nbsp;this.forbiddenZones[this.currentIndex++];<BR>=0036,0033 }<BR>=0037,0034 <BR>=0038,0035 /*<BR>=0039,0036 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FIIIIIIIT<BR>=0040,0037 1)&nbsp;&nbsp;&nbsp;&nbsp;MMM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;skip&nbsp;m<BR>=0041,0038 <BR>=0042,0039 2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MMM&nbsp;&nbsp;NN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;merge&nbsp;with&nbsp;m&nbsp;and&nbsp;possibly&nbsp;with&nbsp;n<BR>=0043,0040 <BR>=0044,0041 3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MMMMMMMMMMMMM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nothing&nbsp;to&nbsp;do<BR>=0045,0042 <BR>=0046,0043 4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extend&nbsp;m.from&nbsp;with&nbsp;from&nbsp;so&nbsp;it&nbsp;can&nbsp;be&nbsp;handled&nbsp;by&nbsp;(2)<BR>=0047,0044 <BR>=0048,0045 5)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FIIIIIIIT&nbsp;is&nbsp;new,&nbsp;located&nbsp;before&nbsp;m<BR>=0049,0046 <BR>=0050,0047 */<BR>=0051,0048 <BR>=0052,0049 <BR>=0053,0050 gold.Moves.prototype.forbid&nbsp;=&nbsp;function(from,to)&nbsp;{<BR>=0054,0051 &nbsp;&nbsp;//&nbsp;add&nbsp;a&nbsp;new&nbsp;forbidden&nbsp;zone&nbsp;and&nbsp;merges&nbsp;it&nbsp;if&nbsp;needed&nbsp;other&nbsp;forbidden&nbsp;zone<BR>=0055,0052 &nbsp;&nbsp;//&nbsp;in&nbsp;order&nbsp;to&nbsp;keep&nbsp;forbidden&nbsp;zone&nbsp;in&nbsp;its&nbsp;simpliest&nbsp;possible&nbsp;form<BR>=0056,0053 &nbsp;&nbsp;var&nbsp;m=this.first();<BR>=0057,0054 &nbsp;&nbsp;while&nbsp;(m)&nbsp;{<BR>=0058,0055 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(m.to&nbsp;<WBR>&lt;&nbsp;from)&nbsp;{&nbsp;//&nbsp;m&nbsp;is&nbsp;before&nbsp;the&nbsp;new&nbsp;interval&nbsp;==&gt;&nbsp;continue&nbsp;to&nbsp;scan&nbsp;<BR>=0059,0056 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;this.next();<BR>=0060,0057 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<BR>=0061,0058 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0062,0059 &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;((m.from&nbsp;<WBR>&lt;=&nbsp;from)&nbsp;&amp;&amp;&nbsp;(m.to&nbsp;&gt;=&nbsp;from))&nbsp;{&nbsp;//(2)&nbsp;the&nbsp;new&nbsp;intervall&nbsp;starts&nbsp;in&nbsp;the&nbsp;middle&nbsp;of&nbsp;m<BR>=0063,0060 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(to&nbsp;<WBR>&lt;=&nbsp;m.to)&nbsp;{&nbsp;//(3)&nbsp;nothing&nbsp;to&nbsp;do&nbsp;since&nbsp;the&nbsp;new&nbsp;interval&nbsp;is&nbsp;already&nbsp;included&nbsp;in&nbsp;an&nbsp;existing&nbsp;one<BR>=0064,0061 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;&nbsp;&nbsp;<BR>=0065,0062 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0066,0063 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;it&nbsp;will&nbsp;extend&nbsp;m,&nbsp;but&nbsp;possibly&nbsp;also&nbsp;merge&nbsp;further&nbsp;existing&nbsp;forbiddenZones<BR>=0067,0064 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;n&nbsp;=&nbsp;this.next();<BR>=0068,0065 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(n)&nbsp;{<BR>=0069,0066 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(n.to&nbsp;<WBR>&lt;=&nbsp;to)&nbsp;{&nbsp;//&nbsp;n&nbsp;is&nbsp;also&nbsp;englobed&nbsp;by&nbsp;the&nbsp;new&nbsp;inteval&nbsp;just&nbsp;suppress&nbsp;it<BR>=0070,0067 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forbiddenZones.splice(this.currentIndex-1,1);<BR>=0071,0068 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;this.forbiddenZones[this.currentIndex-1];<BR>=0072,0069 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<BR>=0073,0070 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0074,0071 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(n.from&nbsp;<WBR>&lt;=&nbsp;to)&nbsp;{&nbsp;//it&nbsp;englobes&nbsp;partially&nbsp;n,&nbsp;but&nbsp;n&nbsp;is&nbsp;longer<BR>=0075,0072 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.to&nbsp;=&nbsp;n.to;<BR>=0076,0073 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forbiddenZones.splice(this.currentIndex-1,1);<BR>=0077,0074 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;<BR>=0078,0075 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0079,0076 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{&nbsp;//&nbsp;just&nbsp;extend&nbsp;m<BR>=0080,0077 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.to&nbsp;=&nbsp;to;<BR>=0081,0078 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;<BR>=0082,0079 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0083,0080 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.to&nbsp;=&nbsp;to;<BR>=0084,0081 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;this.next();<BR>=0085,0082 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0086,0083 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.to&nbsp;=&nbsp;to;<BR>=0087,0084 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;<BR>=0088,0085 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0089,0086 &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;((from&nbsp;<WBR>&lt;=&nbsp;m.from)&nbsp;&amp;&amp;&nbsp;(to&nbsp;&gt;=&nbsp;m.from)){&nbsp;//(4)&nbsp;extend&nbsp;m.from&nbsp;so&nbsp;it&nbsp;can&nbsp;be&nbsp;handle&nbsp;by&nbsp;(2)<BR>=0090,0087 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m.from&nbsp;=&nbsp;from;<BR>=0091,0088 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<BR>=0092,0089 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0093,0090 &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{&nbsp;//&nbsp;the&nbsp;new&nbsp;interval&nbsp;is&nbsp;not&nbsp;adjacent&nbsp;to&nbsp;any&nbsp;existing&nbsp;interval&nbsp;and&nbsp;is&nbsp;located&nbsp;before&nbsp;m<BR>=0094,0091 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forbiddenZones.splice(this.currentIndex-1,0,{from:from,to:to})<BR>=0095,0092 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;<BR>=0096,0093 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0097,0094 &nbsp;&nbsp;}<BR>=0098,0095 &nbsp;&nbsp;//&nbsp;the&nbsp;new&nbsp;interval&nbsp;is&nbsp;the&nbsp;last&nbsp;element<BR>=0099,0096 &nbsp;&nbsp;this.forbiddenZones.push({from:from,to:to});<BR>=0100,0097 &nbsp;&nbsp;return&nbsp;this;<BR>=0101,0098 }<BR>=0102,0099 <BR></PRE><PRE class="DIFF DEL">-0103,     gold.Moves.prototype.shift&nbsp;=&nbsp;function(x)&nbsp;{<BR>-0104,     &nbsp;&nbsp;//&nbsp;return&nbsp;a&nbsp;new&nbsp;Moves&nbsp;object&nbsp;like&nbsp;this,&nbsp;but&nbsp;shifted&nbsp;by&nbsp;x<BR>-0105,     &nbsp;&nbsp;//&nbsp;anything&nbsp;under&nbsp;0&nbsp;is&nbsp;forbidden<BR>-0106,     <BR>-0107,     &nbsp;&nbsp;function&nbsp;_shift(interval)&nbsp;{<BR>-0108,     &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(interval.to&nbsp;<WBR>&lt;=&nbsp;x)&nbsp;{<BR>-0109,     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;<BR>-0110,     &nbsp;&nbsp;&nbsp;&nbsp;}<BR>-0111,     &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(interval.from&nbsp;&gt;=&nbsp;x)&nbsp;{<BR>-0112,     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{from:interval.from-x,to:interval.to-x};<BR>-0113,     &nbsp;&nbsp;&nbsp;&nbsp;}<BR>-0114,     &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{<BR>-0115,     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{from:0,to:interval.to-x};<BR>-0116,     &nbsp;&nbsp;&nbsp;&nbsp;}<BR>-0117,     &nbsp;&nbsp;};<BR>-0118,     <BR>-0119,     &nbsp;&nbsp;return&nbsp;new&nbsp;gold.Moves($.map(this.forbiddenZones,_shift));<BR>-0120,     }<BR>-0121,     <BR></PRE><PRE class="DIFF ADD"></PRE><PRE class="DIFF EQUAL">=0122,0100 gold.Moves.prototype.forbiddenZonesStr&nbsp;=&nbsp;function()&nbsp;{<BR>=0123,0101 &nbsp;&nbsp;//&nbsp;return&nbsp;a&nbsp;string&nbsp;representing&nbsp;the&nbsp;forbidden&nbsp;zones&nbsp;intervals<BR>=0124,0102 &nbsp;&nbsp;var&nbsp;s&nbsp;=&nbsp;'';<BR>=0125,0103 &nbsp;&nbsp;for&nbsp;(var&nbsp;i&nbsp;=&nbsp;this.first();i;i=this.next())&nbsp;{<BR></PRE><PRE class="DIFF DEL">-0126,     &nbsp;&nbsp;&nbsp;&nbsp;s+=&nbsp;'&nbsp;]'+i.from+','+i.to+'[';<BR></PRE><PRE class="DIFF ADD">+    ,0104 &nbsp;&nbsp;&nbsp;&nbsp;s+=&nbsp;'&nbsp;['+i.from+','+i.to+'[';<BR></PRE><PRE class="DIFF EQUAL">=0127,0105 &nbsp;&nbsp;}<BR>=0128,0106 &nbsp;&nbsp;return&nbsp;s;<BR>=0129,0107 }<BR>=0130,0108 &nbsp;&nbsp;<BR>=0131,0109 gold.Moves.prototype.toString&nbsp;=&nbsp;function()&nbsp;{<BR>=0132,0110 &nbsp;&nbsp;return&nbsp;'[object&nbsp;gold.Moves]'+this.forbiddenZonesStr();<BR>=0133,0111 }<BR>=0134,0112 <BR>=0135,0113 gold.Moves.shiftPossible&nbsp;=&nbsp;function(image1,image2,image2Shift)&nbsp;{<BR>=0136,0114 &nbsp;&nbsp;//&nbsp;return&nbsp;true&nbsp;if&nbsp;it&nbsp;is&nbsp;possible&nbsp;to&nbsp;have&nbsp;the&nbsp;place&nbsp;to&nbsp;insert&nbsp;image2&nbsp;shifted&nbsp;by&nbsp;image2Shift&nbsp;inside&nbsp;image1<BR>=0137,0115 &nbsp;&nbsp;//&nbsp;ex:&nbsp;image1&nbsp;:&nbsp;"&nbsp;&nbsp;XXXXXX&nbsp;&nbsp;&nbsp;&nbsp;"<BR>=0138,0116 &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image2&nbsp;:&nbsp;"&nbsp;&nbsp;XXXXXX&nbsp;&nbsp;&nbsp;&nbsp;"<BR>=0139,0117 &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image2Shift:3&nbsp;will&nbsp;return&nbsp;false&nbsp;since<BR>=0140,0118 &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;XXXXXX&nbsp;&nbsp;&nbsp;&nbsp;"<BR>=0141,0119 &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123"&nbsp;&nbsp;XXXXXX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;will&nbsp;conflict<BR>=0142,0120 &nbsp;&nbsp;//&nbsp;but&nbsp;with&nbsp;image2Shift&nbsp;=&nbsp;6&nbsp;it&nbsp;will&nbsp;return&nbsp;true&nbsp;since&nbsp;there&nbsp;is&nbsp;no&nbsp;conflict<BR>=0143,0121 &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;XXXXXX&nbsp;&nbsp;&nbsp;&nbsp;"<BR>=0144,0122 &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123456"&nbsp;&nbsp;XXXXXX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&nbsp;&nbsp;have&nbsp;the&nbsp;place<BR>=0145,0123 &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;image1.length-image2Shift;i++)&nbsp;{<BR>=0146,0124 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((image1.charCodeAt(i)&nbsp;!==&nbsp;32)&nbsp;&amp;&amp;&nbsp;(image2.charCodeAt(i+image2Shift)&nbsp;!==&nbsp;32))&nbsp;return&nbsp;false<BR>=0147,0125 &nbsp;&nbsp;}<BR>=0148,0126 &nbsp;&nbsp;return&nbsp;true;<BR>=0149,0127 }<BR>=0150,0128 <BR>=0151,0129 gold.Moves.prototype.forbidImpossibleShifts&nbsp;=&nbsp;function(image1,image2)&nbsp;{<BR>=0152,0130 &nbsp;&nbsp;//&nbsp;forbid&nbsp;all&nbsp;x&nbsp;where&nbsp;image1&nbsp;and&nbsp;image2&nbsp;will&nbsp;conflict&nbsp;if&nbsp;image2&nbsp;is&nbsp;shifted&nbsp;by&nbsp;x<BR>=0153,0131 &nbsp;&nbsp;var&nbsp;wasPossible&nbsp;=&nbsp;true;<BR>=0154,0132 &nbsp;&nbsp;for&nbsp;(var&nbsp;x=0;x<WBR>&lt;image1.length;x++)&nbsp;{<BR>=0155,0133 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(wasPossible&nbsp;!=&nbsp;gold.Moves.shiftPossible(image1,image2,x))&nbsp;{<BR>=0156,0134 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(wasPossible)&nbsp;{<BR>=0157,0135 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;from&nbsp;=&nbsp;x;<BR>=0158,0136 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0159,0137 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{<BR>=0160,0138 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.forbid(from,x)<BR>=0161,0139 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0162,0140 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wasPossible&nbsp;=&nbsp;!wasPossible;<BR>=0163,0141 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0164,0142 &nbsp;&nbsp;}<BR>=0165,0143 &nbsp;&nbsp;if&nbsp;(!wasPossible)&nbsp;throw&nbsp;new&nbsp;Error('ouups');<BR>=0166,0144 &nbsp;&nbsp;return&nbsp;this;<BR>=0167,0145 }<BR>=0168,0146 <BR>=0169,0147 gold.Moves.prototype.forbidMoves&nbsp;=&nbsp;function(moves)&nbsp;{<BR>=0170,0148 &nbsp;&nbsp;//&nbsp;forbid&nbsp;all&nbsp;forbidden&nbsp;zones&nbsp;of&nbsp;another&nbsp;gold.Moves&nbsp;object<BR>=0171,0149 &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;moves.forbiddenZones.length;i++)&nbsp;{<BR>=0172,0150 &nbsp;&nbsp;&nbsp;&nbsp;this.forbid(moves.forbiddenZones[i].from,moves.forbiddenZones[i].to);<BR>=0173,0151 &nbsp;&nbsp;}<BR>=0174,0152 &nbsp;&nbsp;return&nbsp;this;<BR>=0175,0153 }<BR>=0176,0154 <BR>=0177,0155 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>=0178,0156 ////&nbsp;Pattern&nbsp;//////////////////////////////////////////////////////////////////////////////////////<BR>=0179,0157 <BR>=0180,0158 gold.Pattern&nbsp;=&nbsp;function&nbsp;Pattern(/*image&nbsp;rows*/)&nbsp;{<BR>=0181,0159 &nbsp;&nbsp;//&nbsp;Pattern&nbsp;constructor<BR>=0182,0160 &nbsp;&nbsp;//&nbsp;image&nbsp;rows&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;string&nbsp;that&nbsp;represents&nbsp;an&nbsp;image<BR>=0183,0161 &nbsp;&nbsp;//&nbsp;every&nbsp;character&nbsp;is&nbsp;either&nbsp;a&nbsp;space&nbsp;or&nbsp;something&nbsp;else&nbsp;(typically&nbsp;X)<BR>=0184,0162 &nbsp;&nbsp;//&nbsp;and&nbsp;is&nbsp;transformed&nbsp;into&nbsp;an&nbsp;array&nbsp;of&nbsp;array&nbsp;of&nbsp;boolean<BR>=0185,0163 &nbsp;&nbsp;//&nbsp;every&nbsp;string&nbsp;must&nbsp;have&nbsp;the&nbsp;same&nbsp;length<BR>=0186,0164 <BR>=0187,0165 &nbsp;&nbsp;this.image&nbsp;=&nbsp;[];<BR>=0188,0166 &nbsp;&nbsp;this.moves&nbsp;=&nbsp;new&nbsp;gold.Moves().forbid(-Infinity,0);<BR>=0189,0167 <BR>=0190,0168 &nbsp;&nbsp;//&nbsp;properties&nbsp;that&nbsp;make&nbsp;Pattern&nbsp;a&nbsp;MoveNode&nbsp;like&nbsp;object<BR>=0191,0169 &nbsp;&nbsp;this.pattern&nbsp;=&nbsp;this;<BR>=0192,0170 &nbsp;&nbsp;this.level&nbsp;=&nbsp;0;<BR>=0193,0171 <BR>=0194,0172 &nbsp;&nbsp;var&nbsp;l&nbsp;=&nbsp;arguments[0].length;<BR>=0195,0173 &nbsp;&nbsp;for&nbsp;(var&nbsp;y=0;&nbsp;y<WBR>&lt;arguments.length;&nbsp;y++)&nbsp;{<BR>=0196,0174 &nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;line&nbsp;=&nbsp;arguments[y];<BR>=0197,0175 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(line.length&nbsp;!=&nbsp;l)&nbsp;throw&nbsp;new&nbsp;Error('every&nbsp;line&nbsp;must&nbsp;have&nbsp;the&nbsp;same&nbsp;length');<BR>=0198,0176 &nbsp;&nbsp;&nbsp;&nbsp;this.image.push(line);<BR>=0199,0177 &nbsp;&nbsp;&nbsp;&nbsp;this.moves.forbidImpossibleShifts(line,line);<BR>=0200,0178 &nbsp;&nbsp;}<BR>=0201,0179 }<BR>=0202,0180 <BR>=0203,0181 gold.Pattern.prototype.isPattern&nbsp;=&nbsp;true;<BR>=0204,0182 <BR>=0205,0183 gold.Pattern.prototype.machine&nbsp;=&nbsp;function(machine)&nbsp;{<BR>=0206,0184 &nbsp;&nbsp;//&nbsp;connect&nbsp;this&nbsp;pattern&nbsp;to&nbsp;a&nbsp;machine.<BR>=0207,0185 &nbsp;&nbsp;//&nbsp;MoveNode&nbsp;can&nbsp;only&nbsp;check&nbsp;possible&nbsp;solutions&nbsp;agains&nbsp;a&nbsp;Machine&nbsp;object<BR>=0208,0186 &nbsp;&nbsp;//&nbsp;that&nbsp;will&nbsp;see&nbsp;if&nbsp;a&nbsp;given&nbsp;solution&nbsp;is&nbsp;possible&nbsp;or&nbsp;not&nbsp;on&nbsp;this&nbsp;machine<BR>=0209,0187 &nbsp;&nbsp;this.machine&nbsp;=&nbsp;machine;<BR>=0210,0188 &nbsp;&nbsp;return&nbsp;this;<BR>=0211,0189 }<BR>=0212,0190 <BR>=0213,0191 gold.Pattern.prototype.sequence&nbsp;=&nbsp;function(headNode)&nbsp;{<BR>=0214,0192 &nbsp;&nbsp;//&nbsp;sequence&nbsp;to&nbsp;head&nbsp;is&nbsp;empty&nbsp;since&nbsp;it&nbsp;is&nbsp;the&nbsp;head<BR>=0215,0193 &nbsp;&nbsp;return&nbsp;[];<BR>=0216,0194 }<BR>=0217,0195 <BR>=0218,0196 gold.Pattern.prototype.search&nbsp;=&nbsp;function(depth)&nbsp;{<BR>=0219,0197 &nbsp;&nbsp;//&nbsp;search&nbsp;for&nbsp;the&nbsp;best&nbsp;acceptable&nbsp;solution&nbsp;for&nbsp;the&nbsp;machine&nbsp;associated&nbsp;with&nbsp;this&nbsp;pattern<BR>=0220,0198 &nbsp;&nbsp;//&nbsp;return&nbsp;this&nbsp;for&nbsp;method&nbsp;chaining<BR>=0221,0199 &nbsp;&nbsp;this.bestLoop&nbsp;=&nbsp;{averageLength:Infinity,<BR>=0222,0200 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node:undefined,<BR></PRE><PRE class="DIFF DEL">-0223,     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loop:undefined}<BR>-0224,     &nbsp;&nbsp;this.exploredForbiddenZones&nbsp;=&nbsp;{};&nbsp;//pairs&nbsp;of&nbsp;forbiddenZonesStr:node&nbsp;listing&nbsp;all&nbsp;possible&nbsp;forbiddenZones&nbsp;and&nbsp;the&nbsp;first&nbsp;found&nbsp;node&nbsp;<BR>-0225,     &nbsp;&nbsp;this.deepestLevel&nbsp;=&nbsp;0;<BR>-0226,     &nbsp;&nbsp;startMoveNodeNb&nbsp;=&nbsp;gold.MoveNode.nb;<BR>-0227,     &nbsp;&nbsp;var&nbsp;startTime&nbsp;=&nbsp;Date.now();<BR>-0228,     &nbsp;&nbsp;gold.MoveNode.prototype.generateChildren.call(this,depth,this);<BR>-0229,     &nbsp;&nbsp;this.nbMoveNodes&nbsp;=&nbsp;gold.MoveNode.nb&nbsp;-&nbsp;startMoveNodeNb;<BR>-0230,     &nbsp;&nbsp;this.searchTime&nbsp;=&nbsp;Date.now()-startTime;<BR></PRE><PRE class="DIFF ADD">+    ,0201 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loop:undefined,<BR>+    ,0202 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initSequenceLength:Infinity}<BR>+    ,0203 &nbsp;&nbsp;this.loopHeads&nbsp;=&nbsp;{};&nbsp;//pairs&nbsp;of&nbsp;forbiddenZonesStr:node&nbsp;listing&nbsp;all&nbsp;nodes&nbsp;that&nbsp;are&nbsp;the&nbsp;head&nbsp;of&nbsp;a&nbsp;loop<BR>+    ,0204 &nbsp;&nbsp;gold.MoveNode.prototype.generateChildren.call(this,depth);<BR></PRE><PRE class="DIFF EQUAL">=0231,0205 &nbsp;&nbsp;return&nbsp;this;<BR>=0232,0206 }<BR>=0233,0207 <BR></PRE><PRE class="DIFF DEL">-0234,     gold.Pattern.prototype.registerLoop&nbsp;=&nbsp;function(node)&nbsp;{<BR></PRE><PRE class="DIFF ADD">+    ,0208 gold.Pattern.prototype.generateChildren&nbsp;=&nbsp;function(depth)&nbsp;{<BR>+    ,0209 &nbsp;&nbsp;//generate&nbsp;children&nbsp;according&nbsp;to&nbsp;the&nbsp;forbidden&nbsp;zones<BR>+    ,0210 &nbsp;&nbsp;if&nbsp;(depth&nbsp;==&nbsp;0)&nbsp;return&nbsp;this;<BR>+    ,0211 &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;this.moves.forbiddenZones.length;i++)&nbsp;{<BR>+    ,0212 &nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;interval&nbsp;=&nbsp;this.moves.forbiddenZones[i];<BR>+    ,0213 &nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;gold.MoveNode(this,interval.to,depth-1,this.level+1);<BR>+    ,0214 &nbsp;&nbsp;}<BR>+    ,0215 &nbsp;&nbsp;return&nbsp;this;<BR>+    ,0216 }<BR>+    ,0217 <BR>+    ,0218 gold.Pattern.prototype.registerLoop&nbsp;=&nbsp;function(node,headNode)&nbsp;{<BR>+    ,0219 &nbsp;&nbsp;//&nbsp;register&nbsp;headNode&nbsp;in&nbsp;this.loops&nbsp;in&nbsp;order&nbsp;to&nbsp;better&nbsp;cut&nbsp;the&nbsp;search&nbsp;tree<BR></PRE><PRE class="DIFF EQUAL">=0235,0220 &nbsp;&nbsp;//&nbsp;and&nbsp;keep&nbsp;node&nbsp;as&nbsp;the&nbsp;best&nbsp;loop&nbsp;if&nbsp;this&nbsp;is&nbsp;the&nbsp;case<BR></PRE><PRE class="DIFF DEL">-0236,     &nbsp;&nbsp;if&nbsp;(node.averageLength&nbsp;<WBR>&lt;&nbsp;this.bestLoop.averageLength)&nbsp;{<BR></PRE><PRE class="DIFF ADD">+    ,0221 &nbsp;&nbsp;<BR>+    ,0222 &nbsp;&nbsp;if&nbsp;(this.loopHeads[headNode.moves.forbiddenZonesStr()])&nbsp;throw&nbsp;new&nbsp;Error('already&nbsp;know&nbsp;'+headNode.moves.forbiddenZonesStr());<BR>+    ,0223 <BR>+    ,0224 &nbsp;&nbsp;this.loopHeads[headNode.moves.forbiddenZonesStr()]&nbsp;=&nbsp;headNode;&nbsp;<BR>+    ,0225 &nbsp;&nbsp;if&nbsp;(&nbsp;&nbsp;(node.averageLength&nbsp;<WBR>&lt;&nbsp;this.bestLoop.averageLength)&nbsp;<BR>+    ,0226 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;||(&nbsp;&nbsp;&nbsp;(node.averageLength&nbsp;===&nbsp;this.bestLoop.averageLength)<BR>+    ,0227 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp;&nbsp;a(headNode.level&nbsp;<WBR>&lt;&nbsp;this.bestLoop.initSequenceLength)&nbsp;&nbsp;<BR>+    ,0228 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;ceci&nbsp;est&nbsp;en&nbsp;fait&nbsp;stupide&nbsp;car&nbsp;du&nbsp;moment&nbsp;que&nbsp;l'on&nbsp;a&nbsp;trouvé&nbsp;une&nbsp;fois&nbsp;un&nbsp;loop&nbsp;qui&nbsp;correspond&nbsp;à<BR>+    ,0229 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;une&nbsp;forbiddenZones&nbsp;(donc&nbsp;à&nbsp;une&nbsp;séquence),&nbsp;on&nbsp;ne&nbsp;va&nbsp;plus&nbsp;chercher<BR>+    ,0230 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;or&nbsp;actuellement,&nbsp;plus&nbsp;depth&nbsp;est&nbsp;grand,&nbsp;plus&nbsp;il&nbsp;y&nbsp;a&nbsp;de&nbsp;chance&nbsp;de&nbsp;trouver&nbsp;tôt&nbsp;cette&nbsp;séquence<BR>+    ,0231 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;à&nbsp;une&nbsp;grande&nbsp;profondeur.&nbsp;Même&nbsp;si&nbsp;elle&nbsp;existe&nbsp;ailleurs&nbsp;à&nbsp;une&nbsp;plus&nbsp;faible&nbsp;profondeur,&nbsp;on&nbsp;ne<BR>+    ,0232 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;la&nbsp;prend&nbsp;plus&nbsp;en&nbsp;considération<BR>+    ,0233 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;de&nbsp;plus&nbsp;même&nbsp;si&nbsp;on&nbsp;reconnecte&nbsp;la&nbsp;boucle&nbsp;à&nbsp;un&nbsp;niveau&nbsp;supérieur,&nbsp;on&nbsp;n'est&nbsp;pas&nbsp;sûr&nbsp;d'obtenir<BR>+    ,0234 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;la&nbsp;séquence&nbsp;initiale&nbsp;la&nbsp;plus&nbsp;courte,&nbsp;car&nbsp;elle&nbsp;n'est&nbsp;peut&nbsp;être&nbsp;même&nbsp;pas&nbsp;recherchée&nbsp;suite&nbsp;au&nbsp;fait<BR>+    ,0235 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;que&nbsp;l'on&nbsp;a&nbsp;coupé&nbsp;plus&nbsp;tôt&nbsp;encore&nbsp;la&nbsp;branche&nbsp;car&nbsp;un&nbsp;node&nbsp;a&nbsp;déjà&nbsp;été&nbsp;essayé&nbsp;plus&nbsp;bas<BR>+    ,0236 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;node&nbsp;qui&nbsp;n'était&nbsp;pas&nbsp;la&nbsp;head&nbsp;de&nbsp;la&nbsp;meilleure&nbsp;solution.<BR>+    ,0237 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Dans&nbsp;le&nbsp;fond,&nbsp;cela&nbsp;n'a&nbsp;pas&nbsp;beaucoup&nbsp;d'importance,&nbsp;car&nbsp;seule&nbsp;la&nbsp;boucle&nbsp;compte.<BR>+    ,0238 <BR>+    ,0239 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;)<BR>+    ,0240 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){<BR></PRE><PRE class="DIFF EQUAL">=0237,0241 &nbsp;&nbsp;&nbsp;&nbsp;this.bestLoop.averageLength&nbsp;=&nbsp;node.averageLength;<BR>=0238,0242 &nbsp;&nbsp;&nbsp;&nbsp;this.bestLoop.node&nbsp;=&nbsp;node;<BR>=0239,0243 &nbsp;&nbsp;}<BR>=0240,0244 }&nbsp;&nbsp;<BR>=0241,0245 <BR>=0242,0246 gold.Pattern.prototype.toString&nbsp;=&nbsp;function()&nbsp;{<BR>=0243,0247 &nbsp;&nbsp;return&nbsp;'[object&nbsp;gold.Pattern]';<BR>=0244,0248 }<BR>=0245,0249 <BR>=0246,0250 gold.Pattern.LineSequenceToHtml&nbsp;=&nbsp;function(line,initSequence,loopSequence,repeatLoop)&nbsp;{<BR>=0247,0251 &nbsp;&nbsp;//&nbsp;display&nbsp;the&nbsp;resulting&nbsp;line&nbsp;of&nbsp;the&nbsp;stamping&nbsp;of&nbsp;line<BR>=0248,0252 &nbsp;&nbsp;//&nbsp;according&nbsp;to&nbsp;the&nbsp;sequence<BR>=0249,0253 &nbsp;&nbsp;//&nbsp;sequence&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;number&nbsp;of&nbsp;each&nbsp;relative&nbsp;move<BR>=0250,0254 &nbsp;&nbsp;//&nbsp;return&nbsp;html&nbsp;for&nbsp;the&nbsp;display&nbsp;of&nbsp;one&nbsp;line<BR>=0251,0255 &nbsp;&nbsp;repeatLoop&nbsp;=&nbsp;repeatLoop&nbsp;||&nbsp;2;<BR>=0252,0256 &nbsp;&nbsp;var&nbsp;totalLength&nbsp;=&nbsp;line.length;<BR>=0253,0257 &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;initSequence.length;i++)&nbsp;totalLength&nbsp;+=&nbsp;initSequence[i];<BR>=0254,0258 &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;loopSequence.length;i++)&nbsp;totalLength&nbsp;+=&nbsp;loopSequence[i]*repeatLoop;<BR>=0255,0259 &nbsp;&nbsp;var&nbsp;l&nbsp;=&nbsp;new&nbsp;Array(totalLength);<BR>=0256,0260 <BR>=0257,0261 &nbsp;&nbsp;function&nbsp;stamp(x,code)&nbsp;{<BR></PRE><PRE class="DIFF DEL">-0258,     &nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;internally&nbsp;0&nbsp;represents&nbsp;a&nbsp;collision&nbsp;and&nbsp;undefined&nbsp;a&nbsp;unused&nbsp;space<BR></PRE><PRE class="DIFF ADD">+    ,0262 &nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;internally&nbsp;NaN&nbsp;represents&nbsp;a&nbsp;collision&nbsp;and&nbsp;undefined&nbsp;a&nbsp;unused&nbsp;space<BR></PRE><PRE class="DIFF EQUAL">=0259,0263 &nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;line.length;i++)&nbsp;{<BR>=0260,0264 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(line.charCodeAt(i)!=32)&nbsp;{<BR>=0261,0265 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(l[i+x]===undefined)&nbsp;{<BR>=0262,0266 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l[i+x]=code;<BR>=0263,0267 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0264,0268 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{<BR>=0265,0269 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l[i+x]=NaN;&nbsp;//&nbsp;conflicts&nbsp;<BR>=0266,0270 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0267,0271 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0268,0272 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0269,0273 &nbsp;&nbsp;}<BR>=0270,0274 <BR>=0271,0275 &nbsp;&nbsp;var&nbsp;x&nbsp;=&nbsp;0;<BR>=0272,0276 &nbsp;&nbsp;for&nbsp;(var&nbsp;j=0;j<WBR>&lt;initSequence.length;j++)&nbsp;{<BR>=0273,0277 &nbsp;&nbsp;&nbsp;&nbsp;x+=initSequence[j];<BR>=0274,0278 &nbsp;&nbsp;&nbsp;&nbsp;stamp(x,j+1);<BR>=0275,0279 &nbsp;&nbsp;}<BR>=0276,0280 &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;repeatLoop;i++)&nbsp;{<BR>=0277,0281 &nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(var&nbsp;j=0;j<WBR>&lt;loopSequence.length;j++)&nbsp;{<BR>=0278,0282 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x+=loopSequence[j];<BR>=0279,0283 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stamp(x,-j-1);<BR>=0280,0284 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0281,0285 &nbsp;&nbsp;}<BR>=0282,0286 &nbsp;&nbsp;var&nbsp;r&nbsp;=&nbsp;'<WBR>&lt;span&nbsp;style="background-color:white;font-family:&nbsp;courier;&nbsp;font-size:&nbsp;10px;"&gt;';<BR>=0283,0287 &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;totalLength;i++)&nbsp;{<BR></PRE><PRE class="DIFF DEL">-0284,     &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(l[i]===undefined)&nbsp;r&nbsp;+=&nbsp;'&amp;nbsp;';<BR></PRE><PRE class="DIFF ADD">+    ,0288 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(l[i]==NaN)&nbsp;r&nbsp;+=&nbsp;'<WBR>&lt;b&nbsp;style="color:red"&gt;*<WBR>&lt;/b&gt;';<BR></PRE><PRE class="DIFF EQUAL">=0285,0289 &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(l[i]&gt;0)&nbsp;r+=&nbsp;'<WBR>&lt;b&nbsp;style="color:'+jc.hsl(l[i]*360/initSequence.length,100,100)+'"&gt;I<WBR>&lt;/b&gt;';<BR>=0286,0290 &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(l[i]<WBR>&lt;0)&nbsp;r+=&nbsp;'<WBR>&lt;b&nbsp;style="background-color:'+jc.hsl(l[i]*360/loopSequence.length,100,100)+'"&gt;L<WBR>&lt;/b&gt;';<BR></PRE><PRE class="DIFF DEL">-0287,     &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;r+=&nbsp;'<WBR>&lt;b&nbsp;style="color:red"&gt;*<WBR>&lt;/b&gt;';<BR></PRE><PRE class="DIFF ADD">+    ,0291 &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;r+='&amp;nbsp;';<BR></PRE><PRE class="DIFF EQUAL">=0288,0292 &nbsp;&nbsp;}<BR>=0289,0293 &nbsp;&nbsp;return&nbsp;r+'<WBR>&lt;/span&gt;<WBR>&lt;br&gt;';<BR>=0290,0294 }<BR>=0291,0295 <BR></PRE><PRE class="DIFF DEL">-0292,     gold.Pattern.prototype.imageSequenceToHtml&nbsp;=&nbsp;function(initSequence,loopSequence,repeatLoop){<BR>-0293,     &nbsp;&nbsp;var&nbsp;h&nbsp;=&nbsp;'<WBR>&lt;div&nbsp;style="padding:3px"&gt;';<BR>-0294,     &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;this.image.length;i++)&nbsp;{<BR>-0295,     &nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;+=&nbsp;gold.Pattern.LineSequenceToHtml(this.image[i],[]/*initSequence*/,loopSequence,repeatLoop);<BR>-0296,     &nbsp;&nbsp;}<BR>-0297,     &nbsp;&nbsp;return&nbsp;h+'<WBR>&lt;/div&gt;';<BR>-0298,     }<BR>-0299,     <BR></PRE><PRE class="DIFF ADD"></PRE><PRE class="DIFF EQUAL">=0300,0296 gold.Pattern.prototype.displayBestLoop&nbsp;=&nbsp;function(repeatLoop){<BR>=0301,0297 &nbsp;&nbsp;//&nbsp;return&nbsp;an&nbsp;html&nbsp;object&nbsp;that&nbsp;display&nbsp;the&nbsp;solution&nbsp;found&nbsp;in&nbsp;bestLoop<BR>=0302,0298 &nbsp;&nbsp;var&nbsp;loopSequence&nbsp;=&nbsp;[];<BR>=0303,0299 &nbsp;&nbsp;var&nbsp;initSequence&nbsp;=&nbsp;[];<BR>=0304,0300 &nbsp;&nbsp;var&nbsp;n=this.bestLoop.node;<BR>=0305,0301 &nbsp;&nbsp;if&nbsp;(n===undefined)&nbsp;return&nbsp;jc.html('no&nbsp;loop&nbsp;found&nbsp;at&nbsp;all');<BR>=0306,0302 &nbsp;&nbsp;var&nbsp;l=n.loop;<BR>=0307,0303 &nbsp;&nbsp;var&nbsp;hInit&nbsp;=&nbsp;'';<BR>=0308,0304 &nbsp;&nbsp;var&nbsp;hLoop&nbsp;=&nbsp;'';<BR>=0309,0305 &nbsp;&nbsp;while&nbsp;(n!=l)&nbsp;{<BR>=0310,0306 &nbsp;&nbsp;&nbsp;&nbsp;loopSequence.unshift(n.x);<BR>=0311,0307 &nbsp;&nbsp;&nbsp;&nbsp;hLoop&nbsp;=&nbsp;'<WBR>&lt;br&gt;x='+n.x+n.moves.forbiddenZonesStr()+hLoop;<BR>=0312,0308 &nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;n.parent;<BR>=0313,0309 &nbsp;&nbsp;}<BR></PRE><PRE class="DIFF DEL">-0314,     &nbsp;&nbsp;return&nbsp;jc.html(<BR>-0315,     &nbsp;&nbsp;&nbsp;&nbsp;this.imageSequenceToHtml([],loopSequence,repeatLoop)+<BR>-0316,     &nbsp;&nbsp;&nbsp;&nbsp;'nb&nbsp;Nodes&nbsp;=&nbsp;'+this.nbMoveNodes+<BR>-0317,     &nbsp;&nbsp;&nbsp;&nbsp;'<WBR>&lt;br&gt;deepestLevel&nbsp;=&nbsp;'+this.deepestLevel+<BR>-0318,     &nbsp;&nbsp;&nbsp;&nbsp;'<WBR>&lt;fieldset&gt;<WBR>&lt;legend&gt;loopSequence&nbsp;(length='+loopSequence.length+')<WBR>&lt;/legend&gt;'+hLoop+'<WBR>&lt;/fieldset&gt;'+<BR>-0319,     &nbsp;&nbsp;&nbsp;&nbsp;'<WBR>&lt;br&gt;averageLength:'+this.bestLoop.averageLength+<BR>-0320,     &nbsp;&nbsp;&nbsp;&nbsp;'<WBR>&lt;br&gt;found&nbsp;in&nbsp;'+this.searchTime+'[ms]');<BR>-0321,     }<BR>-0322,     <BR>-0323,     gold.Pattern.prototype.span&nbsp;=&nbsp;function(){<BR>-0324,     &nbsp;&nbsp;var&nbsp;h&nbsp;=&nbsp;'<WBR>&lt;div&nbsp;style="font-family:&nbsp;courier;&nbsp;font-size:&nbsp;10px;padding:3px"&gt;'<BR>-0325,     &nbsp;&nbsp;for&nbsp;(var&nbsp;y=0;y<WBR>&lt;this.image.length;y++)&nbsp;{<BR>-0326,     &nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;+=&nbsp;'<WBR>&lt;span&nbsp;style="background-color:white;"&gt;'+jc.toHtml(this.image[y])&nbsp;+'<WBR>&lt;/span&gt;<WBR>&lt;br&gt;';<BR>-0327,     &nbsp;&nbsp;}<BR>-0328,     &nbsp;&nbsp;return&nbsp;h&nbsp;+&nbsp;'<WBR>&lt;/div&gt;<WBR>&lt;p&gt;'+this.moves.toString();<BR>-0329,     }<BR>-0330,     <BR>-0331,     ////&nbsp;MoveNode&nbsp;/////////////////////////////////////////////////////////////////////////////////////<BR>-0332,     <BR>-0333,     <BR>-0334,     gold.MoveNode&nbsp;=&nbsp;function&nbsp;MoveNode(parent,x,depth,level,pattern)&nbsp;{<BR>-0335,     &nbsp;&nbsp;//&nbsp;MoveNode&nbsp;object&nbsp;represent&nbsp;a&nbsp;node&nbsp;of&nbsp;the&nbsp;search&nbsp;tree<BR>-0336,     &nbsp;&nbsp;//&nbsp;parent&nbsp;must&nbsp;have&nbsp;a&nbsp;.moves&nbsp;property&nbsp;(it&nbsp;can&nbsp;be&nbsp;a&nbsp;Pattern&nbsp;or&nbsp;another&nbsp;MoveNode)<BR>-0337,     &nbsp;&nbsp;//&nbsp;this&nbsp;.moves&nbsp;is&nbsp;copied&nbsp;into&nbsp;the&nbsp;ModeNode&nbsp;but&nbsp;shifted&nbsp;from&nbsp;x<BR>-0338,     &nbsp;&nbsp;//&nbsp;anything&nbsp;below&nbsp;0&nbsp;is&nbsp;either&nbsp;cut&nbsp;or&nbsp;removed<BR>-0339,     <BR>-0340,     &nbsp;&nbsp;gold.MoveNode.nb++;<BR>-0341,     &nbsp;&nbsp;this.pattern&nbsp;=&nbsp;pattern;&nbsp;<BR>-0342,     &nbsp;&nbsp;this.parent&nbsp;=&nbsp;parent;<BR>-0343,     &nbsp;&nbsp;this.level&nbsp;=&nbsp;level;<BR>-0344,     <BR>-0345,     <BR>-0346,     &nbsp;&nbsp;this.x&nbsp;=&nbsp;x;<BR>-0347,     <BR>-0348,     &nbsp;&nbsp;this.moves&nbsp;=&nbsp;this.parent.moves.shift(x);<BR>-0349,     &nbsp;&nbsp;this.moves.forbidMoves(this.pattern.moves);<BR>-0350,     <BR>-0351,     &nbsp;&nbsp;var&nbsp;forbiddenZonesStr&nbsp;=&nbsp;this.moves.forbiddenZonesStr();<BR>-0352,     &nbsp;&nbsp;if&nbsp;(this.pattern.exploredForbiddenZones[forbiddenZonesStr])&nbsp;{&nbsp;//already&nbsp;explored&nbsp;before<BR>-0353,     &nbsp;&nbsp;&nbsp;&nbsp;return;<BR>-0354,     &nbsp;&nbsp;}<BR>-0355,     <BR>-0356,     &nbsp;&nbsp;if&nbsp;(this.pattern.deepestLevel&nbsp;<WBR>&lt;&nbsp;level)&nbsp;this.pattern.deepestLevel&nbsp;=&nbsp;level;<BR>-0357,     <BR>-0358,     &nbsp;&nbsp;this.loop&nbsp;=&nbsp;this.findLoop(forbiddenZonesStr);<BR>-0359,     &nbsp;&nbsp;if&nbsp;(this.loop)&nbsp;{<BR>-0360,     &nbsp;&nbsp;&nbsp;&nbsp;this.pattern.registerLoop(this);<BR>-0361,     &nbsp;&nbsp;}<BR>-0362,     &nbsp;&nbsp;else&nbsp;{<BR>-0363,     &nbsp;&nbsp;&nbsp;&nbsp;this.generateChildren(depth);<BR>-0364,     &nbsp;&nbsp;}<BR>-0365,     <BR>-0366,     &nbsp;&nbsp;this.pattern.exploredForbiddenZones[forbiddenZonesStr]&nbsp;=&nbsp;this;<BR>-0367,     }<BR>-0368,     <BR>-0369,     gold.MoveNode.nb&nbsp;=&nbsp;0;<BR>-0370,     &nbsp;<BR>-0371,     gold.MoveNode.prototype.generateChildren&nbsp;=&nbsp;function(depth)&nbsp;{<BR>-0372,     &nbsp;&nbsp;//generate&nbsp;children&nbsp;according&nbsp;to&nbsp;the&nbsp;forbidden&nbsp;zones<BR>-0373,     &nbsp;&nbsp;if&nbsp;(depth&nbsp;==&nbsp;0)&nbsp;{<BR>-0374,     a('depth=0');<BR>-0375,     &nbsp;&nbsp;&nbsp;&nbsp;return;<BR>-0376,     &nbsp;&nbsp;}<BR>-0377,     &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;this.moves.forbiddenZones.length;i++)&nbsp;{<BR>-0378,     &nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;interval&nbsp;=&nbsp;this.moves.forbiddenZones[i];<BR>-0379,     &nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;gold.MoveNode(this,interval.to,depth-1,this.level+1,this.pattern);<BR>-0380,     &nbsp;&nbsp;}<BR>-0381,     }<BR>-0382,     <BR>-0383,     gold.MoveNode.prototype.sequence&nbsp;=&nbsp;function(headNode)&nbsp;{<BR>-0384,     &nbsp;&nbsp;//&nbsp;return&nbsp;the&nbsp;sequence&nbsp;of&nbsp;moves&nbsp;from&nbsp;node&nbsp;to&nbsp;this.<BR>-0385,     &nbsp;&nbsp;//&nbsp;if&nbsp;node&nbsp;===&nbsp;undefined&nbsp;the&nbsp;full&nbsp;sequence&nbsp;from&nbsp;the&nbsp;head&nbsp;node&nbsp;to&nbsp;this<BR>-0386,     &nbsp;&nbsp;var&nbsp;_sequence&nbsp;=&nbsp;[];<BR>-0387,     &nbsp;&nbsp;var&nbsp;n&nbsp;=&nbsp;this;<BR>-0388,     &nbsp;&nbsp;while&nbsp;(n&nbsp;&amp;&amp;&nbsp;n!=headNode)&nbsp;{<BR>-0389,     &nbsp;&nbsp;&nbsp;&nbsp;_sequence.unshift(n.x);<BR></PRE><PRE class="DIFF ADD">+    ,0310 &nbsp;&nbsp;while&nbsp;(n){<BR>+    ,0311 &nbsp;&nbsp;&nbsp;&nbsp;initSequence.unshift(n.x)<BR>+    ,0312 &nbsp;&nbsp;&nbsp;&nbsp;hInit&nbsp;=&nbsp;'<WBR>&lt;br&gt;x='+n.x+n.moves.forbiddenZonesStr()+hInit;<BR></PRE><PRE class="DIFF EQUAL">=0390,0313 &nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;n.parent;<BR></PRE><PRE class="DIFF DEL"></PRE><PRE class="DIFF ADD">+    ,0314 &nbsp;&nbsp;}&nbsp;<BR>+    ,0315 &nbsp;&nbsp;var&nbsp;h&nbsp;=&nbsp;'<WBR>&lt;div&nbsp;style="padding:3px"&gt;';<BR>+    ,0316 &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;i<WBR>&lt;this.image.length;i++)&nbsp;{<BR>+    ,0317 &nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;+=&nbsp;gold.Pattern.LineSequenceToHtml(this.image[i],initSequence,loopSequence,repeatLoop);<BR></PRE><PRE class="DIFF EQUAL">=0391,0318 &nbsp;&nbsp;}<BR></PRE><PRE class="DIFF DEL"></PRE><PRE class="DIFF ADD">+    ,0319 &nbsp;&nbsp;return&nbsp;jc.html(h+'<WBR>&lt;/div&gt;nb&nbsp;Nodes&nbsp;=&nbsp;'+this.nbNodes+<BR>+    ,0320 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<WBR>&lt;fieldset&gt;<WBR>&lt;legend&gt;initSequence&nbsp;(length='+initSequence.length+')<WBR>&lt;/legend&gt;'+hInit+'<WBR>&lt;/fieldset&gt;'+<BR>+    ,0321 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<WBR>&lt;fieldset&gt;<WBR>&lt;legend&gt;loopSequence&nbsp;(length='+loopSequence.length+')<WBR>&lt;/legend&gt;'+hLoop+'<WBR>&lt;/fieldset&gt;'+<BR>+    ,0322 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<WBR>&lt;br&gt;averageLength:'+this.bestLoop.averageLength);<BR>+    ,0323 }<BR>+    ,0324 <BR>+    ,0325 gold.Pattern.prototype.span&nbsp;=&nbsp;function(){<BR>+    ,0326 &nbsp;&nbsp;var&nbsp;h&nbsp;=&nbsp;'<WBR>&lt;div&nbsp;style="font-family:&nbsp;courier;&nbsp;font-size:&nbsp;10px;padding:3px"&gt;'<BR>+    ,0327 &nbsp;&nbsp;for&nbsp;(var&nbsp;y=0;y<WBR>&lt;this.image.length;y++)&nbsp;{<BR>+    ,0328 &nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;+=&nbsp;'<WBR>&lt;span&nbsp;style="background-color:white;"&gt;'+jc.toHtml(this.image[y])&nbsp;+'<WBR>&lt;/span&gt;<WBR>&lt;br&gt;';<BR>+    ,0329 &nbsp;&nbsp;}<BR>+    ,0330 &nbsp;&nbsp;return&nbsp;h&nbsp;+&nbsp;'<WBR>&lt;/div&gt;<WBR>&lt;p&gt;'+this.moves.toString();<BR>+    ,0331 }<BR>+    ,0332 <BR>+    ,0333 ////&nbsp;MoveNode&nbsp;/////////////////////////////////////////////////////////////////////////////////////<BR>+    ,0334 <BR>+    ,0335 <BR>+    ,0336 gold.MoveNode&nbsp;=&nbsp;function&nbsp;MoveNode(parent,x,depth,level)&nbsp;{<BR>+    ,0337 &nbsp;&nbsp;//&nbsp;MoveNode&nbsp;object&nbsp;represent&nbsp;a&nbsp;node&nbsp;of&nbsp;the&nbsp;search&nbsp;tree<BR>+    ,0338 &nbsp;&nbsp;//&nbsp;parent&nbsp;must&nbsp;have&nbsp;a&nbsp;.moves&nbsp;property&nbsp;(it&nbsp;can&nbsp;be&nbsp;a&nbsp;Pattern&nbsp;or&nbsp;another&nbsp;MoveNode)<BR>+    ,0339 &nbsp;&nbsp;//&nbsp;this&nbsp;.moves&nbsp;is&nbsp;copied&nbsp;into&nbsp;the&nbsp;ModeNode&nbsp;but&nbsp;shifted&nbsp;from&nbsp;x<BR>+    ,0340 &nbsp;&nbsp;//&nbsp;anything&nbsp;below&nbsp;0&nbsp;is&nbsp;either&nbsp;cut&nbsp;or&nbsp;removed<BR>+    ,0341 &nbsp;&nbsp;gold.MoveNode.nb++;<BR>+    ,0342 &nbsp;&nbsp;if&nbsp;(depth===undefined)&nbsp;depth&nbsp;=&nbsp;1;<BR>+    ,0343 &nbsp;&nbsp;this.level&nbsp;=&nbsp;(level===undefined)?1:level;<BR>+    ,0344 &nbsp;&nbsp;if&nbsp;(parent.isPattern){<BR>+    ,0345 &nbsp;&nbsp;&nbsp;&nbsp;this.pattern&nbsp;=&nbsp;parent;&nbsp;<BR>+    ,0346 &nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;the&nbsp;head&nbsp;MoveNode&nbsp;has&nbsp;no&nbsp;parent<BR>+    ,0347 &nbsp;&nbsp;&nbsp;&nbsp;parent.nbStartNode&nbsp;=&nbsp;gold.MoveNode.nb;<BR>+    ,0348 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.pattern.machine&nbsp;===&nbsp;undefined)&nbsp;throw&nbsp;new&nbsp;Error("can't&nbsp;generate&nbsp;MoveNode&nbsp;if&nbsp;the&nbsp;pattern&nbsp;has&nbsp;no&nbsp;associated&nbsp;machine");<BR>+    ,0349 &nbsp;&nbsp;}<BR>+    ,0350 &nbsp;&nbsp;else&nbsp;{<BR>+    ,0351 &nbsp;&nbsp;&nbsp;&nbsp;this.pattern&nbsp;=&nbsp;parent.pattern;<BR>+    ,0352 &nbsp;&nbsp;&nbsp;&nbsp;this.parent&nbsp;=&nbsp;parent;<BR>+    ,0353 &nbsp;&nbsp;}<BR>+    ,0354 &nbsp;&nbsp;this.x&nbsp;=&nbsp;x;<BR>+    ,0355 &nbsp;&nbsp;this.moves&nbsp;=&nbsp;new&nbsp;gold.Moves($.map(parent.moves.forbiddenZones,function(interval)&nbsp;{<BR>+    ,0356 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(interval.to&nbsp;<WBR>&lt;=&nbsp;x)&nbsp;{<BR>+    ,0357 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;<BR>+    ,0358 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>+    ,0359 &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(interval.from&nbsp;&gt;=&nbsp;x)&nbsp;{<BR>+    ,0360 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{from:interval.from-x,to:interval.to-x};<BR>+    ,0361 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>+    ,0362 &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{<BR>+    ,0363 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{from:0,to:interval.to-x};<BR>+    ,0364 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>+    ,0365 &nbsp;&nbsp;}));<BR>+    ,0366 &nbsp;&nbsp;this.moves.forbidMoves(this.pattern.moves);<BR>+    ,0367 &nbsp;&nbsp;var&nbsp;forbiddenZonesStr&nbsp;=&nbsp;this.moves.forbiddenZonesStr();<BR>+    ,0368 &nbsp;&nbsp;var&nbsp;previousHead;<BR>+    ,0369 &nbsp;&nbsp;if&nbsp;(previousHead&nbsp;=&nbsp;this.pattern.loopHeads[forbiddenZonesStr])&nbsp;{&nbsp;//already&nbsp;explored&nbsp;before<BR>+    ,0370 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.level&nbsp;<WBR>&lt;&nbsp;previousHead.level)&nbsp;{<BR>+    ,0371 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previousHead.level&nbsp;=&nbsp;this.level;<BR>+    ,0372 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previousHead.parent&nbsp;=&nbsp;this.parent;&nbsp;//&nbsp;reroute&nbsp;the&nbsp;parent&nbsp;so&nbsp;that&nbsp;the&nbsp;already&nbsp;explored&nbsp;node<BR>+    ,0373 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;becomes&nbsp;has&nbsp;now&nbsp;a&nbsp;shortest&nbsp;initial&nbsp;sequence<BR>+    ,0374 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>+    ,0375 &nbsp;&nbsp;&nbsp;&nbsp;return;<BR>+    ,0376 &nbsp;&nbsp;}<BR>+    ,0377 <BR>+    ,0378 &nbsp;&nbsp;this.loop&nbsp;=&nbsp;this.findLoop(forbiddenZonesStr);<BR>+    ,0379 &nbsp;&nbsp;if&nbsp;(this.loop&nbsp;==&nbsp;undefined)&nbsp;{<BR>+    ,0380 &nbsp;&nbsp;&nbsp;&nbsp;this.generateChildren(depth);<BR>+    ,0381 &nbsp;&nbsp;}<BR>+    ,0382 <BR>+    ,0383 &nbsp;&nbsp;if&nbsp;(parent.isPattern){<BR>+    ,0384 &nbsp;&nbsp;&nbsp;&nbsp;parent.nbNodes&nbsp;=&nbsp;gold.MoveNode.nb&nbsp;-&nbsp;parent.nbStartNode;<BR>+    ,0385 &nbsp;&nbsp;}&nbsp;&nbsp;<BR>+    ,0386 }<BR>+    ,0387 <BR>+    ,0388 gold.MoveNode.nb&nbsp;=&nbsp;0;<BR>+    ,0389 <BR>+    ,0390 gold.MoveNode.prototype.sequence&nbsp;=&nbsp;function(headNode)&nbsp;{<BR>+    ,0391 &nbsp;&nbsp;//&nbsp;return&nbsp;the&nbsp;sequence&nbsp;of&nbsp;moves&nbsp;from&nbsp;node&nbsp;to&nbsp;this.<BR>+    ,0392 &nbsp;&nbsp;//&nbsp;if&nbsp;node&nbsp;===&nbsp;undefined&nbsp;the&nbsp;full&nbsp;sequence&nbsp;from&nbsp;the&nbsp;head&nbsp;node&nbsp;to&nbsp;this<BR>+    ,0393 &nbsp;&nbsp;var&nbsp;_sequence&nbsp;=&nbsp;[];<BR>+    ,0394 &nbsp;&nbsp;var&nbsp;n&nbsp;=&nbsp;this;<BR>+    ,0395 &nbsp;&nbsp;while&nbsp;(n&nbsp;&amp;&amp;&nbsp;n!=headNode)&nbsp;{<BR>+    ,0396 &nbsp;&nbsp;&nbsp;&nbsp;_sequence.unshift(n.x);<BR>+    ,0397 &nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;n.parent;<BR>+    ,0398 &nbsp;&nbsp;}<BR></PRE><PRE class="DIFF EQUAL">=0392,0399 &nbsp;&nbsp;return&nbsp;_sequence;<BR>=0393,0400 }&nbsp;&nbsp;<BR>=0394,0401 &nbsp;<BR></PRE><PRE class="DIFF DEL"></PRE><PRE class="DIFF ADD">+    ,0402 gold.MoveNode.prototype.generateChildren&nbsp;=&nbsp;gold.Pattern.prototype.generateChildren;<BR></PRE><PRE class="DIFF EQUAL">=0395,0403 <BR>=0396,0404 gold.MoveNode.prototype.findLoop&nbsp;=&nbsp;function(forbiddenZonesStr)&nbsp;{<BR>=0397,0405 &nbsp;&nbsp;//&nbsp;search&nbsp;for&nbsp;a&nbsp;ancestor&nbsp;MoveNode&nbsp;that&nbsp;has&nbsp;the&nbsp;same&nbsp;relative&nbsp;forbidden&nbsp;moves<BR>=0398,0406 &nbsp;&nbsp;//&nbsp;calculate&nbsp;the&nbsp;average&nbsp;length&nbsp;of&nbsp;the&nbsp;loop<BR>=0399,0407 &nbsp;&nbsp;//&nbsp;return&nbsp;undefined&nbsp;if&nbsp;no&nbsp;such&nbsp;a&nbsp;MoveNode<BR>=0400,0408 &nbsp;&nbsp;var&nbsp;n&nbsp;=&nbsp;this.parent;<BR>=0401,0409 &nbsp;&nbsp;var&nbsp;nbMoves&nbsp;=&nbsp;1;<BR>=0402,0410 &nbsp;&nbsp;var&nbsp;totalLength&nbsp;=&nbsp;this.x;<BR>=0403,0411 &nbsp;&nbsp;while&nbsp;(n)&nbsp;{<BR>=0404,0412 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(n.moves.forbiddenZonesStr()&nbsp;===&nbsp;forbiddenZonesStr)&nbsp;{<BR>=0405,0413 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.averageLength&nbsp;=&nbsp;totalLength/nbMoves;<BR>=0406,0414 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.nbMovesInLoop&nbsp;=&nbsp;nbMoves;<BR></PRE><PRE class="DIFF DEL"></PRE><PRE class="DIFF ADD">+    ,0415 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.pattern.registerLoop(this,n);<BR></PRE><PRE class="DIFF EQUAL">=0407,0416 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;n;<BR>=0408,0417 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0409,0418 &nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{<BR>=0410,0419 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;totalLength&nbsp;+=&nbsp;n.x;<BR>=0411,0420 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nbMoves++;<BR>=0412,0421 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;n.parent;<BR>=0413,0422 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0414,0423 &nbsp;&nbsp;}<BR>=0415,0424 &nbsp;&nbsp;return&nbsp;undefined;<BR>=0416,0425 }<BR>=0417,0426 <BR>=0418,0427 gold.MoveNode.prototype.span&nbsp;=&nbsp;function()&nbsp;{<BR>=0419,0428 &nbsp;&nbsp;var&nbsp;h&nbsp;=&nbsp;'<WBR>&lt;fieldset&nbsp;style="padding:10px"&gt;<WBR>&lt;legend&gt;[object&nbsp;MoveNode]<WBR>&lt;/legend&gt;x='+this.x+<BR>=0420,0429 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'<WBR>&lt;br&gt;relative&nbsp;forbidden&nbsp;moves:'+this.moves.forbiddenZonesStr();<BR>=0421,0430 &nbsp;&nbsp;if&nbsp;(this.loop){<BR>=0422,0431 &nbsp;&nbsp;&nbsp;&nbsp;h+=&nbsp;'<WBR>&lt;br&gt;LOOP&nbsp;of&nbsp;'+this.nbMovesInLoop+'&nbsp;moves.&nbsp;Average&nbsp;lenght='+this.averageLength.toFixed(3);<BR>=0423,0432 &nbsp;&nbsp;}<BR>=0424,0433 &nbsp;&nbsp;return&nbsp;h+'<WBR>&lt;/fieldset&gt;';<BR>=0425,0434 }<BR>=0426,0435 <BR>=0427,0436 gold.MoveNode.prototype.toString&nbsp;=&nbsp;function()&nbsp;{<BR>=0428,0437 &nbsp;&nbsp;return&nbsp;'[object&nbsp;MoveNode]';<BR>=0429,0438 }<BR>=0430,0439 <BR>=0431,0440 <BR>=0432,0441 ////&nbsp;Machine&nbsp;/////////////////////////////////////////////////////////////////////////////<BR>=0433,0442 gold.machines&nbsp;=&nbsp;{};<BR>=0434,0443 <BR>=0435,0444 gold.Machine&nbsp;=&nbsp;function&nbsp;Machine(name)&nbsp;{<BR>=0436,0445 &nbsp;&nbsp;//&nbsp;Machine&nbsp;objects&nbsp;represent&nbsp;an&nbsp;hot&nbsp;foil&nbsp;stamping&nbsp;machine&nbsp;and&nbsp;its&nbsp;capabilities<BR>=0437,0446 &nbsp;&nbsp;//&nbsp;-&nbsp;name:&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;machine<BR>=0438,0447 &nbsp;&nbsp;//&nbsp;-&nbsp;aLS:&nbsp;function(loopSequence)<BR>=0439,0448 <BR>=0440,0449 &nbsp;&nbsp;this.name&nbsp;=&nbsp;name;<BR>=0441,0450 &nbsp;&nbsp;gold.machines[name]&nbsp;=&nbsp;this;<BR>=0442,0451 }<BR>=0443,0452 <BR>=0444,0453 gold.Machine.prototype.acceptableLoopSequence&nbsp;=&nbsp;function(loopSequence)&nbsp;{<BR>=0445,0454 &nbsp;&nbsp;//&nbsp;return&nbsp;an&nbsp;object&nbsp;with&nbsp;the&nbsp;machine&nbsp;parameter&nbsp;if&nbsp;the&nbsp;sequence&nbsp;is&nbsp;achievable&nbsp;on&nbsp;this&nbsp;machine<BR>=0446,0455 &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;null&nbsp;if&nbsp;not&nbsp;achivable<BR>=0447,0456 &nbsp;&nbsp;//&nbsp;loopSequence&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;distances&nbsp;of&nbsp;the&nbsp;sequence<BR>=0448,0457 &nbsp;&nbsp;//&nbsp;this&nbsp;method&nbsp;will&nbsp;call&nbsp;<BR>=0449,0458 &nbsp;&nbsp;for&nbsp;(var&nbsp;i=0;&nbsp;i<WBR>&lt;loopSequence.length;&nbsp;i++)&nbsp;{<BR>=0450,0459 &nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;params&nbsp;=&nbsp;this.aLS(loopSequence);<BR>=0451,0460 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(params)&nbsp;{<BR>=0452,0461 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params.loopSequence&nbsp;=&nbsp;loopSequence;<BR>=0453,0462 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;params;<BR>=0454,0463 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0455,0464 &nbsp;&nbsp;&nbsp;&nbsp;loopSequence&nbsp;=&nbsp;loopSequence.slice(1).concat(loopSequence.slice(0,1));<BR>=0456,0465 &nbsp;&nbsp;}<BR>=0457,0466 &nbsp;&nbsp;return&nbsp;null;<BR>=0458,0467 }<BR>=0459,0468 <BR></PRE><PRE class="DIFF DEL">-0460,     gold.Machine.prototype.ideal&nbsp;=&nbsp;function()&nbsp;{<BR>-0461,     &nbsp;&nbsp;//&nbsp;set&nbsp;an&nbsp;aLS&nbsp;function&nbsp;for&nbsp;a&nbsp;machine&nbsp;that&nbsp;can&nbsp;handle&nbsp;any&nbsp;sequence<BR>-0462,     &nbsp;&nbsp;this.aLS&nbsp;=&nbsp;function&nbsp;ideal(loopSequence)&nbsp;{<BR>-0463,     &nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;loopSequence;<BR>-0464,     &nbsp;&nbsp;}<BR>-0465,     &nbsp;&nbsp;return&nbsp;this;<BR>-0466,     }<BR>-0467,     <BR>-0468,     <BR>-0469,     <BR></PRE><PRE class="DIFF ADD"></PRE><PRE class="DIFF EQUAL">=0470,0469 gold.Machine.prototype.aLSx1l1_l2&nbsp;=&nbsp;function(x1max,l1max,l2max)&nbsp;{<BR>=0471,0470 &nbsp;&nbsp;//&nbsp;set&nbsp;an&nbsp;aLS&nbsp;function&nbsp;for&nbsp;device&nbsp;that&nbsp;accept&nbsp;<BR>=0472,0471 &nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;solutions&nbsp;of&nbsp;the&nbsp;form&nbsp;x1&nbsp;*&nbsp;l1&nbsp;+&nbsp;l2<BR>=0473,0472 &nbsp;&nbsp;x1max&nbsp;=&nbsp;x1max&nbsp;||&nbsp;Infinity;<BR>=0474,0473 &nbsp;&nbsp;l1max&nbsp;=&nbsp;l1max&nbsp;||&nbsp;Infinity;<BR>=0475,0474 &nbsp;&nbsp;l2max&nbsp;=&nbsp;l2max&nbsp;||&nbsp;Infinity;<BR>=0476,0475 <BR>=0477,0476 &nbsp;&nbsp;this.aLS&nbsp;=&nbsp;function&nbsp;x1l1_l2(loopSequence)&nbsp;{<BR>=0478,0477 &nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;find&nbsp;parameters&nbsp;for&nbsp;machine&nbsp;with&nbsp;x1*l1+l2&nbsp;patterns<BR>=0479,0478 &nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;l1&nbsp;=&nbsp;loopSequence[0];<BR>=0480,0479 &nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;x1&nbsp;=&nbsp;loopSequence.length-1;<BR>=0481,0480 &nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;l2&nbsp;=&nbsp;loopSequence[x1];<BR>=0482,0481 &nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((l1&gt;l1max)&nbsp;||&nbsp;(x1&gt;x1max)&nbsp;||&nbsp;(l2&gt;l2max))&nbsp;{<BR>=0483,0482 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;<BR>=0484,0483 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0485,0484 &nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(var&nbsp;i=1;i<WBR>&lt;x1;i++)&nbsp;{<BR>=0486,0485 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(loopSequence[i]&nbsp;!=&nbsp;l1)&nbsp;{<BR>=0487,0486 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;<BR>=0488,0487 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0489,0488 &nbsp;&nbsp;&nbsp;&nbsp;}<BR>=0490,0489 &nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{l1:l1,x1:x1,l2:l2};<BR>=0491,0490 &nbsp;&nbsp;}<BR></PRE><PRE class="DIFF DEL">-0492,     &nbsp;&nbsp;return&nbsp;this;<BR></PRE><PRE class="DIFF ADD"></PRE><PRE class="DIFF EQUAL">=0493,0491 }<BR>=0494,0492 &nbsp;&nbsp;&nbsp;&nbsp;<BR>=0495,0493 <BR></PRE><PRE class="DIFF DEL"></PRE><PRE class="DIFF ADD"></PRE></DIV></DIV></BODY></HTML>